use array::{ArrayTrait};
use alexandria_substrate::blake2b::{blake2b,convert_u8_array_to_felt252_array, u8_array_eq};
fn get_lorem_ipsum() -> Array<u8> {
    let mut input: Array<u8> = Default::default();
    // "abc"
    input.append(0x61);
    input.append(0x62);
    input.append(0x63);
    input
}

fn get_expected_output_hash() -> Array<u8> {
    let mut i: Array<u8> = Default::default();
    // 0xbddd813c634239723171ef3fee98579b94964e3bb1cb3e427262c8c068d52319
    i.append(0xbd);i.append(0xdd);i.append(0x81);i.append(0x3c);i.append(0x63);i.append(0x42);i.append(0x39);i.append(0x72);i.append(0x31);i.append(0x71);i.append(0xef);i.append(0x3f);i.append(0xee);i.append(0x98);i.append(0x57);i.append(0x9b);i.append(0x94);i.append(0x96);i.append(0x4e);i.append(0x3b);i.append(0xb1);i.append(0xcb);i.append(0x3e);i.append(0x42);i.append(0x72);i.append(0x62);i.append(0xc8);i.append(0xc0);i.append(0x68);i.append(0xd5);i.append(0x23);i.append(0x19);
    i
}

#[test]
#[available_gas(20000000000)]
fn test_blake2b() {
    let msg = get_lorem_ipsum();
    let res = blake2b(msg);
    assert(res.len() == 32, 'Incorrect hash length');
    assert(u8_array_eq(res.span(), get_expected_output_hash().span()), 'Hash output not as expected');

}

fn get_lorem_ipsum_2() -> Array<u8> {
    let mut i: Array<u8> = Default::default();
    // 0x80fff780989daec3c59a0cc7092e31c7dbdd42a59d84ac855a987788628a68490251cc1580a1863838b7334959dbb2342c79d2e179875ad90735f9a2fa8aa6d922ab7aef188080a618078d331c51c7099d3e095ee72fbd3c2679621e52517a8d819fdd2a86e680fc6e5de247e2dabf97738ba19224190ac42f7b0c004d7babee4f82e9543b7a3b80ea205e4629887c328fa30800cbefa54480b13bb44b24b3bddc8b84872bde3f8180625a245bb9127410d807a1088ed3c0c4d51849923e5fb96ef68ec3c21e340de680dc4bb00af8fbc7c23f2212bcbd07c5686a4a03cb795271e7151a0fe50b7ad3c080437fec2d7a61f021052b4ce9b62ef90f08bbb72abb8ec0b281e298b53fdd4a0280c8e7e9ec0401b44487b1f7204d9259e4ac2440a2bb6609c751b17aebd45a94cc800721022dce0d957153717a570451a8bb91c8b47fccdfa6949693b0caf698d2f880792ae864b2fd3712fb5c4ca36368a2092cea4eccd2d7cefba1906fccbe8fb395800962c9c6baab455860e6b80fd9f672e09b622438f3dfd65a294b4fb038e38c8e8097c0deffb6fbfcffa8c0a53a2f08516f2aa78c291ac97e49e59df8a7f4982eab80e760ab94cb4eeac545835fd9ff0bfb7024ba6b88b98261d1df3abef97196b4d280727d7813fcb36c9551f8428e64b97c29ec875281bb27ab43487e6e59e82d7609
    i.append(0x80);i.append(0xff);i.append(0xf7);i.append(0x80);i.append(0x98);i.append(0x9d);i.append(0xae);i.append(0xc3);i.append(0xc5);i.append(0x9a);i.append(0x0c);i.append(0xc7);i.append(0x09);i.append(0x2e);i.append(0x31);i.append(0xc7);i.append(0xdb);i.append(0xdd);i.append(0x42);i.append(0xa5);i.append(0x9d);i.append(0x84);i.append(0xac);i.append(0x85);i.append(0x5a);i.append(0x98);i.append(0x77);i.append(0x88);i.append(0x62);i.append(0x8a);i.append(0x68);i.append(0x49);i.append(0x02);i.append(0x51);i.append(0xcc);i.append(0x15);i.append(0x80);i.append(0xa1);i.append(0x86);i.append(0x38);i.append(0x38);i.append(0xb7);i.append(0x33);i.append(0x49);i.append(0x59);i.append(0xdb);i.append(0xb2);i.append(0x34);i.append(0x2c);i.append(0x79);i.append(0xd2);i.append(0xe1);i.append(0x79);i.append(0x87);i.append(0x5a);i.append(0xd9);i.append(0x07);i.append(0x35);i.append(0xf9);i.append(0xa2);i.append(0xfa);i.append(0x8a);i.append(0xa6);i.append(0xd9);i.append(0x22);i.append(0xab);i.append(0x7a);i.append(0xef);i.append(0x18);i.append(0x80);i.append(0x80);i.append(0xa6);i.append(0x18);i.append(0x07);i.append(0x8d);i.append(0x33);i.append(0x1c);i.append(0x51);i.append(0xc7);i.append(0x09);i.append(0x9d);i.append(0x3e);i.append(0x09);i.append(0x5e);i.append(0xe7);i.append(0x2f);i.append(0xbd);i.append(0x3c);i.append(0x26);i.append(0x79);i.append(0x62);i.append(0x1e);i.append(0x52);i.append(0x51);i.append(0x7a);i.append(0x8d);i.append(0x81);i.append(0x9f);i.append(0xdd);i.append(0x2a);i.append(0x86);i.append(0xe6);i.append(0x80);i.append(0xfc);i.append(0x6e);i.append(0x5d);i.append(0xe2);i.append(0x47);i.append(0xe2);i.append(0xda);i.append(0xbf);i.append(0x97);i.append(0x73);i.append(0x8b);i.append(0xa1);i.append(0x92);i.append(0x24);i.append(0x19);i.append(0x0a);i.append(0xc4);i.append(0x2f);i.append(0x7b);i.append(0x0c);i.append(0x00);i.append(0x4d);i.append(0x7b);i.append(0xab);i.append(0xee);i.append(0x4f);i.append(0x82);i.append(0xe9);i.append(0x54);i.append(0x3b);i.append(0x7a);i.append(0x3b);i.append(0x80);i.append(0xea);i.append(0x20);i.append(0x5e);i.append(0x46);i.append(0x29);i.append(0x88);i.append(0x7c);i.append(0x32);i.append(0x8f);i.append(0xa3);i.append(0x08);i.append(0x00);i.append(0xcb);i.append(0xef);i.append(0xa5);i.append(0x44);i.append(0x80);i.append(0xb1);i.append(0x3b);i.append(0xb4);i.append(0x4b);i.append(0x24);i.append(0xb3);i.append(0xbd);i.append(0xdc);i.append(0x8b);i.append(0x84);i.append(0x87);i.append(0x2b);i.append(0xde);i.append(0x3f);i.append(0x81);i.append(0x80);i.append(0x62);i.append(0x5a);i.append(0x24);i.append(0x5b);i.append(0xb9);i.append(0x12);i.append(0x74);i.append(0x10);i.append(0xd8);i.append(0x07);i.append(0xa1);i.append(0x08);i.append(0x8e);i.append(0xd3);i.append(0xc0);i.append(0xc4);i.append(0xd5);i.append(0x18);i.append(0x49);i.append(0x92);i.append(0x3e);i.append(0x5f);i.append(0xb9);i.append(0x6e);i.append(0xf6);i.append(0x8e);i.append(0xc3);i.append(0xc2);i.append(0x1e);i.append(0x34);i.append(0x0d);i.append(0xe6);i.append(0x80);i.append(0xdc);i.append(0x4b);i.append(0xb0);i.append(0x0a);i.append(0xf8);i.append(0xfb);i.append(0xc7);i.append(0xc2);i.append(0x3f);i.append(0x22);i.append(0x12);i.append(0xbc);i.append(0xbd);i.append(0x07);i.append(0xc5);i.append(0x68);i.append(0x6a);i.append(0x4a);i.append(0x03);i.append(0xcb);i.append(0x79);i.append(0x52);i.append(0x71);i.append(0xe7);i.append(0x15);i.append(0x1a);i.append(0x0f);i.append(0xe5);i.append(0x0b);i.append(0x7a);i.append(0xd3);i.append(0xc0);i.append(0x80);i.append(0x43);i.append(0x7f);i.append(0xec);i.append(0x2d);i.append(0x7a);i.append(0x61);i.append(0xf0);i.append(0x21);i.append(0x05);i.append(0x2b);i.append(0x4c);i.append(0xe9);i.append(0xb6);i.append(0x2e);i.append(0xf9);i.append(0x0f);i.append(0x08);i.append(0xbb);i.append(0xb7);i.append(0x2a);i.append(0xbb);i.append(0x8e);i.append(0xc0);i.append(0xb2);i.append(0x81);i.append(0xe2);i.append(0x98);i.append(0xb5);i.append(0x3f);i.append(0xdd);i.append(0x4a);i.append(0x02);i.append(0x80);i.append(0xc8);i.append(0xe7);i.append(0xe9);i.append(0xec);i.append(0x04);i.append(0x01);i.append(0xb4);i.append(0x44);i.append(0x87);i.append(0xb1);i.append(0xf7);i.append(0x20);i.append(0x4d);i.append(0x92);i.append(0x59);i.append(0xe4);i.append(0xac);i.append(0x24);i.append(0x40);i.append(0xa2);i.append(0xbb);i.append(0x66);i.append(0x09);i.append(0xc7);i.append(0x51);i.append(0xb1);i.append(0x7a);i.append(0xeb);i.append(0xd4);i.append(0x5a);i.append(0x94);i.append(0xcc);i.append(0x80);i.append(0x07);i.append(0x21);i.append(0x02);i.append(0x2d);i.append(0xce);i.append(0x0d);i.append(0x95);i.append(0x71);i.append(0x53);i.append(0x71);i.append(0x7a);i.append(0x57);i.append(0x04);i.append(0x51);i.append(0xa8);i.append(0xbb);i.append(0x91);i.append(0xc8);i.append(0xb4);i.append(0x7f);i.append(0xcc);i.append(0xdf);i.append(0xa6);i.append(0x94);i.append(0x96);i.append(0x93);i.append(0xb0);i.append(0xca);i.append(0xf6);i.append(0x98);i.append(0xd2);i.append(0xf8);i.append(0x80);i.append(0x79);i.append(0x2a);i.append(0xe8);i.append(0x64);i.append(0xb2);i.append(0xfd);i.append(0x37);i.append(0x12);i.append(0xfb);i.append(0x5c);i.append(0x4c);i.append(0xa3);i.append(0x63);i.append(0x68);i.append(0xa2);i.append(0x09);i.append(0x2c);i.append(0xea);i.append(0x4e);i.append(0xcc);i.append(0xd2);i.append(0xd7);i.append(0xce);i.append(0xfb);i.append(0xa1);i.append(0x90);i.append(0x6f);i.append(0xcc);i.append(0xbe);i.append(0x8f);i.append(0xb3);i.append(0x95);i.append(0x80);i.append(0x09);i.append(0x62);i.append(0xc9);i.append(0xc6);i.append(0xba);i.append(0xab);i.append(0x45);i.append(0x58);i.append(0x60);i.append(0xe6);i.append(0xb8);i.append(0x0f);i.append(0xd9);i.append(0xf6);i.append(0x72);i.append(0xe0);i.append(0x9b);i.append(0x62);i.append(0x24);i.append(0x38);i.append(0xf3);i.append(0xdf);i.append(0xd6);i.append(0x5a);i.append(0x29);i.append(0x4b);i.append(0x4f);i.append(0xb0);i.append(0x38);i.append(0xe3);i.append(0x8c);i.append(0x8e);i.append(0x80);i.append(0x97);i.append(0xc0);i.append(0xde);i.append(0xff);i.append(0xb6);i.append(0xfb);i.append(0xfc);i.append(0xff);i.append(0xa8);i.append(0xc0);i.append(0xa5);i.append(0x3a);i.append(0x2f);i.append(0x08);i.append(0x51);i.append(0x6f);i.append(0x2a);i.append(0xa7);i.append(0x8c);i.append(0x29);i.append(0x1a);i.append(0xc9);i.append(0x7e);i.append(0x49);i.append(0xe5);i.append(0x9d);i.append(0xf8);i.append(0xa7);i.append(0xf4);i.append(0x98);i.append(0x2e);i.append(0xab);i.append(0x80);i.append(0xe7);i.append(0x60);i.append(0xab);i.append(0x94);i.append(0xcb);i.append(0x4e);i.append(0xea);i.append(0xc5);i.append(0x45);i.append(0x83);i.append(0x5f);i.append(0xd9);i.append(0xff);i.append(0x0b);i.append(0xfb);i.append(0x70);i.append(0x24);i.append(0xba);i.append(0x6b);i.append(0x88);i.append(0xb9);i.append(0x82);i.append(0x61);i.append(0xd1);i.append(0xdf);i.append(0x3a);i.append(0xbe);i.append(0xf9);i.append(0x71);i.append(0x96);i.append(0xb4);i.append(0xd2);i.append(0x80);i.append(0x72);i.append(0x7d);i.append(0x78);i.append(0x13);i.append(0xfc);i.append(0xb3);i.append(0x6c);i.append(0x95);i.append(0x51);i.append(0xf8);i.append(0x42);i.append(0x8e);i.append(0x64);i.append(0xb9);i.append(0x7c);i.append(0x29);i.append(0xec);i.append(0x87);i.append(0x52);i.append(0x81);i.append(0xbb);i.append(0x27);i.append(0xab);i.append(0x43);i.append(0x48);i.append(0x7e);i.append(0x6e);i.append(0x59);i.append(0xe8);i.append(0x2d);i.append(0x76);i.append(0x09);

    i
}

fn get_expected_output_hash_2() -> Array<u8> {
    let mut i: Array<u8> = Default::default();
    // 0xfdc56bd3a6e78790edf011e2e7468db8e41cc6ad6a3523b4acc035fc2ff410a2
    i.append(0xfd);i.append(0xc5);i.append(0x6b);i.append(0xd3);i.append(0xa6);i.append(0xe7);i.append(0x87);i.append(0x90);i.append(0xed);i.append(0xf0);i.append(0x11);i.append(0xe2);i.append(0xe7);i.append(0x46);i.append(0x8d);i.append(0xb8);i.append(0xe4);i.append(0x1c);i.append(0xc6);i.append(0xad);i.append(0x6a);i.append(0x35);i.append(0x23);i.append(0xb4);i.append(0xac);i.append(0xc0);i.append(0x35);i.append(0xfc);i.append(0x2f);i.append(0xf4);i.append(0x10);i.append(0xa2);
    i
}

#[test]
#[available_gas(20000000000)]
fn test_blake2b_2() {
    let msg = get_lorem_ipsum_2();
    let res = blake2b(msg);
    assert(res.len() == 32, 'Incorrect hash length');
    assert(u8_array_eq(res.span(), get_expected_output_hash_2().span()), 'Hash output not as expected');

}